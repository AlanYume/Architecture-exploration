package com.foo.jason.entity;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.Table;

@Entity
@Table(name = "user")
// MySQL is NOT case sensitive
public class User {

    @Id
    @GeneratedValue
    @Column(name = "userId", unique = true, nullable = false)
    private Integer userId;

    @Column(name = "firstName", nullable = false, length = 50)
    private String firstName;

    @Column(name = "lastname", nullable = false, length = 50)
    private String lastname;

    // Constructors < no argument - all arguments except id - all arguments >
    public User() {
        super();
        this.userId = null;
        this.firstName = null;
        this.lastname = null;
    }

    public User(final String firstName, final String lastname) {
        super();
        this.userId = null;
        this.firstName = firstName;
        this.lastname = lastname;
    }

    public User(final Integer userId, final String firstName, final String lastname) {
        super();
        this.userId = userId;
        this.firstName = firstName;
        this.lastname = lastname;
    }

    // Autogenerated Getters and Setters
    public Integer getUserId() {
        return userId;
    }

    public void setUserId(final Integer userId) {
        this.userId = userId;
    }

    public String getFirstName() {
        return firstName;
    }

    public void setFirstName(final String firstName) {
        this.firstName = firstName;
    }

    public String getLastname() {
        return lastname;
    }

    public void setLastname(final String lastname) {
        this.lastname = lastname;
    }

    @Override
    public String toString() {
        return "User [userId=" + userId + ", firstName=" + firstName + ", lastname=" + lastname +
                "]";
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((firstName == null) ? 0 : firstName.hashCode());
        result = prime * result + ((lastname == null) ? 0 : lastname.hashCode());
        result = prime * result + ((userId == null) ? 0 : userId.hashCode());
        return result;
    }

    /**
     * equals() is useful for junit tests
     *
     * @author jason
     * @param obj
     *            : object to compare with this
     * @return true if obj==this, false if obj!=this
     */
    @Override
    public boolean equals(final Object obj) {
        final User other = (User) obj;
        if (getClass() == obj.getClass() && userId.equals(other.getUserId()) && firstName.equals(
                other.getFirstName())
                && lastname.equals(other.getLastname())) {
            return true;
        } else {
            return false;
        }
    }
}